{"version":3,"sources":["camera-solid.svg","times-solid.svg","components/SendImage.jsx","components/Prediction.jsx","components/Index.jsx","index.js"],"names":["module","exports","__webpack_require__","p","SendImage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","send","event","setState","loading","setImg","URL","createObjectURL","target","files","formData","FormData","append","fetch","state","host","method","body","then","res","json","setPrediction","data","catch","error","console","react_default","a","createElement","style","textAlign","Fragment","id","type","accept","capture","onChange","htmlFor","display","flexDirection","alignItems","className","src","camera","alt","color","marginTop","String","Component","Prediction","onClick","clear","icon","img","prediction","Index","pred","clearInput","flex","SendImage_SendImage","href","Prediction_Prediction","ReactDOM","render","Index_Index","document","getElementById"],"mappings":"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","file":"static/js/main.428513cd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/camera-solid.84c475e6.svg\";","module.exports = __webpack_public_path__ + \"static/media/times-solid.042cb2ae.svg\";","import React, { Component } from \"react\";\n\nimport camera from \"../camera-solid.svg\";\n\nexport default class SendImage extends Component {\n  constructor(props) {\n    super(props);\n    let host = \"https://isthisapple.herokuapp.com\";\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\n      host = \"http://127.0.0.1:5000\";\n    }\n    this.state = {\n      loading: false,\n      host: host,\n      error: null\n    };\n  }\n\n  send = event => {\n    this.setState({ loading: true });\n    this.props.setImg(URL.createObjectURL(event.target.files[0]));\n    var formData = new FormData();\n    formData.append(\"image\", event.target.files[0]);\n    fetch(this.state.host + \"/predict/\", {\n      method: \"POST\",\n      body: formData\n    })\n      .then(res => res.json())\n      .then(body => {\n        this.props.setPrediction(body.data);\n      })\n      .catch(error => {\n        console.error(error);\n        this.setState({ loading: false, error: error });\n      });\n  };\n\n  render() {\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        {this.state.loading ? (\n          \"Loading\"\n        ) : (\n          <>\n            <input\n              id=\"image\"\n              type=\"file\"\n              accept=\"image/*\"\n              capture\n              onChange={this.send}\n            />\n            <label htmlFor=\"image\">\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\"\n                }}\n              >\n                <div className=\"button\">\n                  <img\n                    src={camera}\n                    className=\"camera-icon\"\n                    alt=\"Take a photo\"\n                  />\n                </div>\n              </div>\n            </label>\n            {this.state.error !== null ? (\n              <div style={{ color: \"red\", marginTop: \"10px\" }}>\n                {String(this.state.error)}\n              </div>\n            ) : null}\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport \"./prediction.css\";\nimport icon from \"../times-solid.svg\";\n\nexport default class Prediction extends Component {\n  render() {\n    return (\n      <div className=\"result\">\n        <div className=\"close\">\n          <div className=\"circle\" onClick={this.props.clear}>\n            <img src={icon} alt=\"Close\" />\n          </div>\n        </div>\n        <div className=\"image-holder\">\n          <img src={this.props.img} className=\"input-image\" alt=\"Your input\" />\n        </div>\n        <div>\n          {this.props.prediction[0][0] === 0 ? (\n            <div className=\"prediction apple\">Apple</div>\n          ) : (\n            <div className=\"prediction not-apple\">Not apple</div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport SendImage from \"./SendImage.jsx\";\nimport Prediction from \"./Prediction.jsx\";\n\nexport default class Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      img: null,\n      prediction: null\n    };\n  }\n\n  setPrediction = pred => {\n    this.setState({\n      prediction: pred\n    });\n  };\n\n  setImg = img => {\n    this.setState({\n      img: img\n    });\n  };\n\n  clearInput = () => {\n    this.setState({\n      prediction: null\n    });\n  };\n\n  render() {\n    return (\n      <>\n        {this.state.prediction === null ? (\n          <>\n            <div style={{ flex: 1 }}>\n              <div>\n                <h1 className=\"title\">\n                  Is this\n                  <br />\n                  apple?\n                </h1>\n              </div>\n              <SendImage\n                setPrediction={this.setPrediction}\n                setImg={this.setImg}\n              />\n            </div>\n            <footer className=\"footer\">\n              <p>\n                Made by&nbsp;\n                <a href=\"https://prd-ev.github.io\">PRDev</a>\n              </p>\n            </footer>\n          </>\n        ) : (\n          <>\n            <Prediction\n              prediction={this.state.prediction}\n              img={this.state.img}\n              clear={this.clearInput}\n            />\n          </>\n        )}\n      </>\n    );\n  }\n}\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport Index from \"./components/Index.jsx\";\n\nimport \"./index.css\";\n\nReactDOM.render(<Index />, document.getElementById(\"root\"));\n"],"sourceRoot":""}