{"version":3,"sources":["components/SendImage.jsx","components/Prediction.jsx","components/Index.jsx","index.js"],"names":["SendImage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","send","event","setState","loading","formData","FormData","append","target","files","fetch","method","body","then","res","json","setPrediction","data","state","react_default","a","createElement","type","accept","capture","onChange","Component","Prediction","prediction","apple","not_apple","Index","pred","clearInput","img","Fragment","SendImage_SendImage","Prediction_Prediction","onClick","ReactDOM","render","Index_Index","document","getElementById"],"mappings":"uKAEqBA,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAMRQ,KAAO,SAAAC,GACLR,EAAKS,SAAS,CAAEC,SAAS,IACzB,IAAIC,EAAW,IAAIC,SACnBD,EAASE,OAAO,QAASL,EAAMM,OAAOC,MAAM,IAC5CC,MAAM,6CAA8C,CAClDC,OAAQ,OACRC,KAAMP,IAELQ,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAD,GACJlB,EAAKD,MAAMuB,cAAcJ,EAAKK,SAflCvB,EAAKwB,MAAQ,CACXd,SAAS,GAHMV,wEAsBjB,OACEyB,EAAAC,EAAAC,cAAA,WACGxB,KAAKqB,MAAMd,QACV,UAEAe,EAAAC,EAAAC,cAAA,SAAOC,KAAK,OAAOC,OAAO,UAAUC,SAAO,EAACC,SAAU5B,KAAKI,eA5B9ByB,aCAlBC,cACnB,SAAAA,EAAYlC,GAAQ,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAA8B,GAAAhC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgC,GAAA3B,KAAAH,KACZJ,0EAIN,OACE0B,EAAAC,EAAAC,cAAA,yBACc,IACXxB,KAAKJ,MAAMmC,WAAWC,MAAQhC,KAAKJ,MAAMmC,WAAWE,UACjD,QACA,oBAX4BJ,aCEnBK,cACnB,SAAAA,EAAYtC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkC,IACjBrC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoC,GAAA/B,KAAAH,KAAMJ,KAORuB,cAAgB,SAAAgB,GACdtC,EAAKS,SAAS,CACZyB,WAAYI,KAVGtC,EAcnBuC,WAAa,WACXvC,EAAKS,SAAS,CACZyB,WAAY,QAddlC,EAAKwB,MAAQ,CACXgB,IAAK,KACLN,WAAY,MAJGlC,wEAqBjB,OACEyB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAe,SAAA,KACEhB,EAAAC,EAAAC,cAAA,6BAC2B,OAA1BxB,KAAKqB,MAAMU,WACVT,EAAAC,EAAAC,cAACe,EAAD,CAAWpB,cAAenB,KAAKmB,gBAE/BG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAe,SAAA,KACEhB,EAAAC,EAAAC,cAACgB,EAAD,CAAYT,WAAY/B,KAAKqB,MAAMU,aACnCT,EAAAC,EAAAC,cAAA,UAAQiB,QAASzC,KAAKoC,YAAtB,cA9BuBP,aCAnCa,IAASC,OAAOrB,EAAAC,EAAAC,cAACoB,EAAD,MAAWC,SAASC,eAAe","file":"static/js/main.4979895a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class SendImage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false\n    };\n  }\n\n  send = event => {\n    this.setState({ loading: true });\n    var formData = new FormData();\n    formData.append(\"image\", event.target.files[0]);\n    fetch(\"https://isthisapple.herokuapp.com/predict/\", {\n      method: \"POST\",\n      body: formData\n    })\n      .then(res => res.json())\n      .then(body => {\n        this.props.setPrediction(body.data);\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.loading ? (\n          \"Loading\"\n        ) : (\n          <input type=\"file\" accept=\"image/*\" capture onChange={this.send} />\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Prediction extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        Prediction:{\" \"}\n        {this.props.prediction.apple > this.props.prediction.not_apple\n          ? \"Apple\"\n          : \"Not apple\"}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport SendImage from \"./SendImage.jsx\";\nimport Prediction from \"./Prediction.jsx\";\n\nexport default class Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      img: null,\n      prediction: null\n    };\n  }\n\n  setPrediction = pred => {\n    this.setState({\n      prediction: pred\n    });\n  };\n\n  clearInput = () => {\n    this.setState({\n      prediction: null\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <div>Is this apple?</div>\n        {this.state.prediction === null ? (\n          <SendImage setPrediction={this.setPrediction} />\n        ) : (\n          <>\n            <Prediction prediction={this.state.prediction} />\n            <button onClick={this.clearInput}>X</button>\n          </>\n        )}\n      </>\n    );\n  }\n}\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport Index from \"./components/Index.jsx\";\n\nReactDOM.render(<Index />, document.getElementById(\"root\"));\n"],"sourceRoot":""}